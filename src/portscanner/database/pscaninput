#include <stdlib.h>
#include <iostream>
#include <sstream>
#include <stdexcept>
#include "mysql_connection.h"
#include <cppconn/driver.h>
#include <cppconn/exception.h>
#include <cppconn/resultset.h>
#include <boost/scooped_ptr.hpp>
#include <driver/mysql_public_iface.h>
#include <fstream>

using namespace std;

int main(int argc, const char **argv)
{
  string url = argv[2]; //mysql connection url
  const string user = argv[3]; //username
  const string pass = argv[4]; //password

  ifstream file; 
  file.open(argv[1]); //file name of scan output
  string lines[2]; //stores the id in [0], ports in [1]
  
  int i = 0;

  try
  {
    sql::Driver *driver = sql::mysql::get_driver_instance;
    boost::scoped_ptr< sql::connection > con(driver->connect(url, user, pass); //connecting to db
    boost::scoped_ptr< sql::statement > stmt(con->createStatement()); //sql statements
    
    stmt->execute("USE portscan");
    if(file.is_open())
    {                                
      while(getline(file, line))       
      {    
         lines[i] = (string)line; //takes in two lines of the file
         i++;
      }    
    }
    file.close();
    sql.str(""); //begins query string
    sql << "INSERT INTO ports(id, ports) VALUES(";
    sql << "'" << (int)lines[0].id << "', '" lines[1].ports << "')";
    stmt->execute(sql.str()); //executes query string
  } catch (sql::SQLException &e)
  {
    cout << e.what();
    cout << "MYsql error code: " << e.getErrorCode();
    return EXIT_FAILURE;
  } catch (std::runtiime_error &e)
  {
    cout << e.what();
    return EXIT_FAILURE;
  } 

}
